###########################
# aop
###########################
spring.aop.proxy-target-class=true

###########################
# flyway, 用来初始化数据库的工具, 如果不用, 设置为false
###########################
flyway.enabled=false
# 是否允许数据库脚本不按顺序执行, 一般无需修改此项
flyway.out-of-order=true
flyway.baseline-on-migrate=true

###########################
# datasource, 设置数据库JDBC连接
###########################
#spring.datasource.url=jdbc:oracle:thin:@//192.168.1.250:1521/orcl
#spring.datasource.username=eams_500_dev
#spring.datasource.password=1

#spring.datasource.url=jdbc:oracle:thin:@192.168.1.250:1521:orcl
#spring.datasource.username=eams_500_real_data
#spring.datasource.password=1

#spring.datasource.url=jdbc:oracle:thin:@192.168.1.250:1521:orcl
#spring.datasource.username=hfut_07_04
#spring.datasource.password=1

#spring.datasource.url=jdbc:oracle:thin:@192.168.1.250:1521:orcl
#spring.datasource.username=eams_500_hf_test
#spring.datasource.password=1

spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=eams_test
spring.datasource.password=123456

#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:XE
#spring.datasource.username=wx
#spring.datasource.password=111

#spring.datasource.url=jdbc:oracle:thin:@60.174.249.83:1521:orcl
#spring.datasource.username=eams5_20161219
#spring.datasource.password=eams

spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
sspring.datasource.tomcat.max-active=100
spring.datasource.tomcat.min-idle=10
spring.datasource.tomcat.max-idle=20
# initial-size如果太大可能会出现 ORA-12519 错误
spring.datasource.tomcat.initial-size=20
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.test-on-return=true
spring.datasource.tomcat.validation-query=select 1 from dual
spring.datasource.tomcat.max-wait=30000

###########################
# redis, 如果不用, 则不要添加jedis的依赖即可
###########################
spring.redis.host=localhost
spring.redis.password=
spring.redis.port=6379
spring.redis.timeout=10000

###########################
# elasticsearch, 如果不用, 设置为false
# https://www.elastic.co/guide/en/elasticsearch/client/java-api/current/node-client.html
# https://www.elastic.co/guide/en/elasticsearch/client/java-api/current/transport-client.html
###########################
es.enabled=true
# elasticsearch 客户端模式, 取值node, client, local, transport
# 生产环境下应使用client模式, 单元测试下使用local模式, 默认local
es.mode=local
# 在client, local, node模式下, 需要设置此属性, 指向一个路径
es.path.home=/home/wangxiao/dev/eshome
# elasticsearch cluster name, default: eams_elasticsearch
es.cluster-name=eams_es

# transport模式下的设置
# 逗号分隔的elasticsearch服务器列表: host1:port1,host2:port2
#es.transport-addresses=
# true/false
#es.transport-sniff=
#es.transport-ignore-cluster-name=
#es.transport-ping-timeout=
#es.transport-nodes-sampler-interval=

###########################
# 是否开启domain日志
###########################
eams.domain.log.enabled=true

###########################
# embedded tomcat 配置
###########################
server.tomcat.accesslog.enabled=true
server.tomcat.max-threads=1000
server.error.include-stacktrace=always
#server.port=8080
#server.tomcat.accesslog.pattern=%h %l %u %t &quot;%r&quot; %s %b &quot;%{Referer}i&quot; &quot;%{User-Agent}i&quot; %A %p %D %S &quot;%{X-Forwarded-For}i&quot; &quot;%{SECURITY_LOGIN_NAME}s&quot;
#server.compression.enabled=true
#server.compression.mime-types[0]=text/html
#server.compression.mime-types[1]=text/xml
#server.compression.mime-types[2]=text/plain
#server.compression.mime-types[3]=text/css
#server.compression.mime-types[4]=application/javascript
#server.context-path=/eams5

###########################
# 文件上传配置
###########################
multipart.enabled=true
# 单个文件最大尺寸
multipart.max-file-size=20Mb
# 所有文件尺寸最大尺寸总和, 因一次可以上传多个文件
multipart.max-request-size=50Mb
multipart.location=/tmp/
multipart.file-size-threshold=10Kb

###########################
# 页面引擎设置
###########################
# 页面引擎缓存, 在生产系统下应该设为true, 可以提高系统访问速度
spring.thymeleaf.cache=false
spring.velocity.enabled=false
spring.velocity.checkTemplateLocation=false
spring.freemarker.enabled=false

###########################
# security配置
###########################
# 启用下面一行可以让用户随便输入什么密码都能登录，可以用在压力测试的时候
eams.security.authc.local.allow-all=false
# 缓存存活时间（单位毫秒）, 默认360秒
eams.security.authz.cache.ttl=360000
# 缓存清理线程执行时间间隔（单位毫秒），默认120秒
eams.security.authz.cache.clear-delay=120000

###########################
# activiti, 如果不用, 设置为false
###########################

# 是否使用activiti自己的权限表
activiti.use-self-identity=false
# 是否需要让activiti自动建表
activiti.init-db=false
# 如果自动建表, 则需要指定schema
activiti.schema=
# 开启异步的activiti job executor
activiti.async-executor-enabled=true
activiti.async-executor-activate=true


###########################
# Artemis(JMS Server)的JNDI配置
#
# 可以定义多个ConnectionFactory, 定义的格式是:
#   artemis.jndi.connectionFactory.{名字}={连接字符串}
# 这里的名字是JNDI的名字, 也将会是spring bean name
#
# 可以定义多个Queue和Topic, 定义的格式是:
#   artemis.jndi.queue.{名字}={Artemis服务器中Queue的名字}
#   artemis.jndi.topic.{名字}={Artemis服务器中Topic的名字}
# 这里的名字是JNDI的名字, 也将会是spring bean name
###########################
artemis.jndi.enabled=true
artemis.jndi.java.naming.factory.initial=org.apache.activemq.artemis.jndi.ActiveMQInitialContextFactory
artemis.jndi.connectionFactory.jms.connectionFactory=tcp://127.0.0.1:61616?type=CF\
  &useGlobalPools=false\
  &threadPoolMaxSize=10\
  &retryInterval=2000\
  &retryIntervalMultiplier=1.5\
  &maxRetryInterval=30000\
  &reconnectAttempts=-1

# 定义选课相关的JMS对象, 具体见 "Artemis(JMS Server)的JNDI配置"
artemis.jndi.queue.jms.CourseSelect.request=CourseSelect.request
artemis.jndi.topic.jms.CourseSelect.response=CourseSelect.response

###########################
# JMS Connection相关的配置
# 1. 创建Connection所用的ConnectionFactory
# 2. 创建Connection所用的用户名
# 3. 创建Connection所用的密码
#
# 可以定义多个Connection, 格式如下:
#   jms.connection.{名字}.factory={ConnectionFactory的bean name}
#   jms.connection.{名字}.username={用户名}
#   jms.connection.{名字}.password={密码}
# 这里的名字将会是这个Connection的spring bean name
###########################
jms.connection.jms.defaultConnection.factory=jms.connectionFactory
jms.connection.jms.defaultConnection.username=eams
jms.connection.jms.defaultConnection.password=eams

############################ 
Spring session 配置
###########################
spring.session.store-type=redis
spring.session.redis.flush-mode=immediate

###########################
# 选课前端和JMS Server的相关配置
###########################
# 使用的Connection的bean name, 对应 jms.connection.* 的配置
eams.cs.jms.connection-bean=jms.defaultConnection
# 使用的选课请求Queue的bean name, 对应 artemis.jndi.queue.jms.CourseSelect.request
eams.cs.jms.request-queue-bean=jms.CourseSelect.request
# 使用的选课请求Topic的bean name, 对应 artemis.jndi.topic.jms.CourseSelect.response
eams.cs.jms.response-topic-bean=jms.CourseSelect.response

#选课缓存-任务刷新时间 10分钟
eams.cs.lesson-cache.refresh.delay=600000

#选课缓存-已选人数刷新时间 1分钟
eams.cs.std-count-cache.refresh.delay=60000

#选课缓存-选课结果清理时间 1分钟
eams.cs.response-cache.flush.delay=60000

###########################
# 系统邮件发送和JMS Server的相关配置
###########################

# 定义系统邮件相关的JMS对象, 具体见 "Artemis(JMS Server)的JNDI配置"
artemis.jndi.queue.jms.SystemMail.request=SystemMail.request

# 使用的Connection的bean name, 对应 jms.connection.* 的配置
eams.system-mail.jms.connection-bean=jms.defaultConnection
# 使用的系统邮件请求Queue的bean name, 对应 artemis.jndi.queue.jms.SystemMail.request
eams.system-mail.jms.request-queue-bean=jms.SystemMail.request

###########################
# jackson序列化和反序列化配置
###########################
spring.jackson.date-format==yyyy-MM-dd HH:mm:ss
spring.jackson.joda-date-time-format=yyyy-MM-dd HH:mm:ss


spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public-override/,classpath:/public/

